version: '2'
services:

    zabbix-db-storage:
      image: busybox:latest
      volumes:
        - /var/lib/mysql

    zabbix-db:
      image: zabbix/zabbix-db-mariadb
      volumes:
        - /backups:/backups
        - /etc/localtime:/etc/localtime:ro
      volumes_from:
        - zabbix-db-storage
      environment:
        - MARIADB_USER=zabbix
        - MARIADB_PASS=my_password

    zabbix-server:
      image: zabbix/zabbix-3.0:latest
      ports:
        - "80:80"
        - "10051:10051"
      volumes:
        - /etc/localtime:/etc/localtime:ro
      links:
        - zabbix-db:zabbix.db
      environment:
        - ZS_DBHost=zabbix.db
        - ZS_DBUser=zabbix
        - ZS_DBPassword=my_password

    # Access ip addresses at http://localhost:8500/v1/catalog/service/web-service
    # Required SERVICE_TAGS web for dynamic registration
    dynamo:
        build: ./docker/dynamo
        environment:
          SERVICE_80_NAME: dynamo
          SERVICE_NAME: dynamo
          SERVICE_TAGS: dynamo
        ports:
          - "8080"
        links:
          - "consulserver:consul"

    # Run only once
    consulserver:
        image: gliderlabs/consul-server:latest
        container_name: consulserver
        hostname: consulserver
        ports:
           - "8300"
           - "8301"
           - "8400"
           - "8500"
           - "53"
        command: -data-dir /tmp/consul -bootstrap -client 0.0.0.0 -node consulserver

    # Run at every docker-machine
    registrator:
        image: gliderlabs/registrator:master
        container_name: registrator
        links:
          - "consulserver:consul"
        volumes:
           - "/var/run/docker.sock:/tmp/docker.sock"
        command: -internal consul://consul:8500

    # Run only once - access application through ip address of this docker-machine (ip:8080)
    proxy:
        build: ./docker/proxy
        container_name: 'load-balancer'
        links:
          - "consulserver:consul"
        ports:
          - "8080:8080"
          - "8081"

    # Run when developing app
#    consulclient:
#        image: progrium/consul:latest
#        container_name: consulclient
#        links:
#           - "consulserver:consul"
#        ports:
#           - "8300"
#           - "8400"
#           - "8500:8500"
#           - "53"
#        command: -data-dir /tmp/consul -join consulserver